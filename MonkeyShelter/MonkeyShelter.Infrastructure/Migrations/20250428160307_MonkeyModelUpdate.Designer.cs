// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonkeyShelter.Infrastructure;

#nullable disable

namespace MonkeyShelter.Infrastructure.Migrations
{
    [DbContext(typeof(MonkeyShelterDbContext))]
    [Migration("20250428160307_MonkeyModelUpdate")]
    partial class MonkeyModelUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MonkeyShelter.Core.Entities.Monkey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ShelterId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Monkeys");
                });

            modelBuilder.Entity("MonkeyShelter.Core.Entities.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("MonkeyShelter.Core.Entities.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chimpanzee"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Baboon"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Capuchin"
                        });
                });

            modelBuilder.Entity("MonkeyShelter.Core.Entities.VetCheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MonkeyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MonkeyId");

                    b.ToTable("VetChecks");
                });

            modelBuilder.Entity("MonkeyShelter.Core.Entities.Monkey", b =>
                {
                    b.HasOne("MonkeyShelter.Core.Entities.Shelter", "Shelter")
                        .WithMany("Monkeys")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonkeyShelter.Core.Entities.Species", "Species")
                        .WithMany("Monkeys")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("MonkeyShelter.Core.Entities.VetCheck", b =>
                {
                    b.HasOne("MonkeyShelter.Core.Entities.Monkey", "Monkey")
                        .WithMany("VetChecks")
                        .HasForeignKey("MonkeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Monkey");
                });

            modelBuilder.Entity("MonkeyShelter.Core.Entities.Monkey", b =>
                {
                    b.Navigation("VetChecks");
                });

            modelBuilder.Entity("MonkeyShelter.Core.Entities.Shelter", b =>
                {
                    b.Navigation("Monkeys");
                });

            modelBuilder.Entity("MonkeyShelter.Core.Entities.Species", b =>
                {
                    b.Navigation("Monkeys");
                });
#pragma warning restore 612, 618
        }
    }
}
